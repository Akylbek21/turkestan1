// js/i18n.js ‚Äî RU/KK –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Å localStorage
(function () {
  const LS_KEY = 'lang';

  // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π (value –≤ <option> –æ—Å—Ç–∞—é—Ç—Å—è RU!)
  const MAP_CATS = {
    ru: {
      '–ú–∞–≤–∑–æ–ª–µ–π':'–ú–∞–≤–∑–æ–ª–µ–π','–ú–µ—á–µ—Ç—å':'–ú–µ—á–µ—Ç—å','–ê—Ä—Ö–µ–æ–ª–æ–≥–∏—è':'–ê—Ä—Ö–µ–æ–ª–æ–≥–∏—è','–ú—É–∑–µ–π':'–ú—É–∑–µ–π',
      '–ö—É–ª—å—Ç—É—Ä–∞':'–ö—É–ª—å—Ç—É—Ä–∞','–°—Ü–µ–Ω–∞':'–°—Ü–µ–Ω–∞','–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è':'–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è','–ü–∞—Ä–∫':'–ü–∞—Ä–∫',
      '–ê—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω':'–ê—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω','–ü—Ä–∏—Ä–æ–¥–∞':'–ü—Ä–∏—Ä–æ–¥–∞','–ü–µ—â–µ—Ä–∞':'–ü–µ—â–µ—Ä–∞','–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞':'–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞'
    },
    kk: {
      '–ú–∞–≤–∑–æ–ª–µ–π':'–ö–µ—Å–µ–Ω–µ','–ú–µ—á–µ—Ç—å':'–ú–µ—à—ñ—Ç','–ê—Ä—Ö–µ–æ–ª–æ–≥–∏—è':'–ê—Ä—Ö–µ–æ–ª–æ–≥–∏—è','–ú—É–∑–µ–π':'–ú“±—Ä–∞–∂–∞–π',
      '–ö—É–ª—å—Ç—É—Ä–∞':'–ú”ô–¥–µ–Ω–∏–µ—Ç','–°—Ü–µ–Ω–∞':'–°–∞—Ö–Ω–∞','–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è':'–û–π—ã–Ω-—Å–∞—É—ã“õ','–ü–∞—Ä–∫':'–°–∞—è–±–∞“õ',
      '–ê—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω':'–ê—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω','–ü—Ä–∏—Ä–æ–¥–∞':'–¢–∞–±–∏“ì–∞—Ç','–ü–µ—â–µ—Ä–∞':'“Æ“£–≥—ñ—Ä','–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞':'–ò–Ω—Ñ—Ä–∞“õ“±—Ä—ã–ª—ã–º'
    }
  };

  // –°–ª–æ–≤–∞—Ä—å
  const DICT = {
    ru: {
      app:{ title:'–î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¢—É—Ä–∫–µ—Å—Ç–∞–Ω—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏' },
      nav:{ guide:'–ì–∏–¥', passport:'–ü–∞—Å–ø–æ—Ä—Ç' },
      search:{ placeholder:'–ü–æ–∏—Å–∫: –Ø—Å—Å–∞—É–∏, –û—Ç—ã—Ä–∞—Ä, –°–∞—É—Ä–∞–Ω‚Ä¶' },
      filter:{ category:'–ö–∞—Ç–µ–≥–æ—Ä–∏—è', all:'–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏' },
      visited:{ label:'–ü–æ—Å–µ—â–µ–Ω–æ:' },
      place:{
        facts:'–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã',
        quiz:'–ü—Ä–æ–≤–µ—Ä—å –∑–Ω–∞–Ω–∏—è',
        check:'–ü—Ä–æ–≤–µ—Ä–∏—Ç—å',
        reconTitle:'–ü—Ä–æ—à–ª–æ–µ / —Å–µ–≥–æ–¥–Ω—è',
        reconHint:'–ü—Ä–æ–≤–µ–¥–∏—Ç–µ –ø–æ–ª–∑—É–Ω–æ–∫',
        mark:'–ë—ã–ª –∑–¥–µ—Å—å',
        map:'–û—Ç–∫—Ä—ã—Ç—å –≤ Google Maps',
        share:'–ü–æ–¥–µ–ª–∏—Ç—å—Å—è',
        pick:'–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç',
        right:'–í–µ—Ä–Ω–æ! üéâ',
        wrong:'–ù–µ–≤–µ—Ä–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë.'
      },
      footer:{ copy:'Turkestan Guide ‚Äî –º—É–ª—å—Ç–∏—Å—Ç—Ä–∞–Ω–∏—á–Ω–∞—è –≤–µ—Ä—Å–∏—è', tech:'HTML ‚Ä¢ CSS ‚Ä¢ JS' },
      toast:{ copied:'–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!' }
    },
    kk: {
      app:{ title:'–¢“Ø—Ä–∫—ñ—Å—Ç–∞–Ω –æ–±–ª—ã—Å—ã–Ω—ã“£ –∫”©—Ä—ñ–∫—Ç—ñ –∂–µ—Ä–ª–µ—Ä—ñ' },
      nav:{ guide:'–ù“±—Å“õ–∞—É–ª—ã“õ', passport:'–°–∞—è—Ö–∞—Ç—à—ã –ø–∞—Å–ø–æ—Ä—Ç—ã' },
      search:{ placeholder:'–Ü–∑–¥–µ—É: –Ø—Å—Å–∞—É–∏, –û—Ç—ã—Ä–∞—Ä, –°–∞—É—Ä–∞–Ω‚Ä¶' },
      filter:{ category:'–°–∞–Ω–∞—Ç', all:'–ë–∞—Ä–ª—ã“õ —Å–∞–Ω–∞—Ç—Ç–∞—Ä' },
      visited:{ label:'–ë–∞—Ä“ì–∞–Ω–¥–∞—Ä:' },
      place:{
        facts:'“ö—ã–∑—ã“õ—Ç—ã –¥–µ—Ä–µ–∫—Ç–µ—Ä',
        quiz:'–ë—ñ–ª—ñ–º—ñ“£–¥—ñ —Ç–µ–∫—Å–µ—Ä',
        check:'–¢–µ–∫—Å–µ—Ä—É',
        reconTitle:'”®—Ç–∫–µ–Ω / –±“Ø–≥—ñ–Ω',
        reconHint:'–ñ“Ø–≥—ñ—Ä—Ç–∫—ñ–Ω—ñ –∂—ã–ª–∂—ã—Ç—ã“£—ã–∑',
        mark:'–ë–∞—Ä–¥—ã–º',
        map:'Google –∫–∞—Ä—Ç–∞—Å—ã–Ω–¥–∞ –∞—à—É',
        share:'–ë”©–ª—ñ—Å—É',
        pick:'–ù“±—Å“õ–∞–Ω—ã —Ç–∞“£–¥–∞“£—ã–∑',
        right:'–î“±—Ä—ã—Å! üéâ',
        wrong:'–î“±—Ä—ã—Å –µ–º–µ—Å. “ö–∞–π—Ç–∞–ª–∞–ø –∫”©—Ä—ñ“£—ñ–∑.'
      },
      footer:{ copy:'Turkestan Guide ‚Äî –∫”©–ø–±–µ—Ç—Ç—ñ –Ω“±—Å“õ–∞', tech:'HTML ‚Ä¢ CSS ‚Ä¢ JS' },
      toast:{ copied:'–°—ñ–ª—Ç–µ–º–µ –∫”©—à—ñ—Ä—ñ–ª–¥—ñ!' }
    }
  };

  const I18N = {
    lang: localStorage.getItem(LS_KEY) || 'ru',
    _cbs:[],
    set(l){
      this.lang = (l === 'kk' ? 'kk' : 'ru');
      localStorage.setItem(LS_KEY, this.lang);
      this.applyAll();
      this._cbs.forEach(fn => fn(this.lang));
    },
    get(){ return this.lang; },
    onChange(fn){ this._cbs.push(fn); },
    t(key){
      const d = DICT[this.lang] || {};
      const r = key.split('.').reduce((o,k)=>o && o[k], d);
      return (r == null) ? key : r;
    },

    // ===== index.html =====
    updateIndexUI(){
      const h1 = document.querySelector('header h1');
      if (h1) h1.textContent = this.t('app.title');

      const nav = document.querySelectorAll('header a.badge');
      nav.forEach(a=>{
        const href = a.getAttribute('href') || '';
        if (href.includes('guide'))    a.textContent = this.t('nav.guide');
        if (href.includes('passport')) a.textContent = this.t('nav.passport');
      });

      const q = document.getElementById('q');
      if (q) q.placeholder = this.t('search.placeholder');

      const cat = document.getElementById('cat');
      if (cat) cat.setAttribute('aria-label', this.t('filter.category'));
      const mapCat = MAP_CATS[this.lang];
      if (cat){
        [...cat.options].forEach(opt=>{
          if (!opt.value) opt.textContent = this.t('filter.all');
          else            opt.textContent = mapCat[opt.value] || opt.value;
        });
      }

      const vb = document.getElementById('visited-badge');
      if (vb){
        const count = (vb.textContent.match(/\d+/) || [0])[0];
        vb.textContent = `${this.t('visited.label')} ${count}`;
      }

      document.querySelectorAll('.grid .card .loc .tag').forEach(tag=>{
        const ru = tag.dataset.ru || tag.textContent;
        tag.dataset.ru = ru;
        tag.textContent = (MAP_CATS[this.lang][ru] || ru);
      });

      const foot = document.querySelector('footer .container div:last-child');
      const copy = document.querySelector('footer .container div:first-child');
      foot && (foot.textContent = this.t('footer.tech'));
      copy && (copy.childNodes[0].nodeValue = `¬© ${new Date().getFullYear()} ${this.t('footer.copy')} `);

      document.documentElement.setAttribute('lang', this.lang === 'kk' ? 'kk' : 'ru');
    },

    // ===== place-—Å—Ç—Ä–∞–Ω–∏—Ü—ã =====
    updatePlaceUI(){
      const factsH = document.querySelector('.section h3');
      if (factsH) factsH.textContent = this.t('place.facts');

      const quizH = document.querySelector('.section.quiz h3');
      if (quizH) quizH.textContent = this.t('place.quiz');

      const checkBtn = document.getElementById('check');
      if (checkBtn) checkBtn.textContent = this.t('place.check');

      const reconTitle = document.querySelector('.recon-head h3');
      const reconHint  = document.querySelector('.recon-head .muted');
      reconTitle && (reconTitle.textContent = this.t('place.reconTitle'));
      reconHint  && (reconHint.textContent  = this.t('place.reconHint'));

      const mark = document.getElementById('mark');
      const map  = document.getElementById('map');
      const share= document.getElementById('share');
      mark  && (mark.textContent  = this.t('place.mark'));
      map   && (map.textContent   = this.t('place.map'));
      share && (share.textContent = this.t('place.share'));

      const y = document.getElementById('y'); y && (y.textContent = new Date().getFullYear());
      const copy = document.querySelector('footer .container');
      copy && (copy.lastChild && (copy.lastChild.nodeValue = ' ' + this.t('footer.copy')));

      document.querySelectorAll('.tag').forEach(tag=>{
        const ru = tag.dataset.ru || tag.textContent;
        tag.dataset.ru = ru;
        tag.textContent = (MAP_CATS[this.lang][ru] || ru);
      });

      document.documentElement.setAttribute('lang', this.lang === 'kk' ? 'kk' : 'ru');
    },

    init(){
      document.querySelectorAll('[data-lang]').forEach(btn=>{
        btn.addEventListener('click', (e)=>{
          e.preventDefault();
          this.set(btn.dataset.lang);
          document.querySelectorAll('[data-lang]').forEach(b=>b.classList.toggle('active', b.dataset.lang===this.lang));
        });
      });
      document.querySelectorAll('[data-lang]').forEach(b=>b.classList.toggle('active', b.dataset.lang===this.lang));
      document.documentElement.setAttribute('lang', this.lang === 'kk' ? 'kk' : 'ru');
    },

    applyAll(){
      this.updateIndexUI();
      this.updatePlaceUI();
    }
  };

  // –≠–∫—Å–ø–æ—Ä—Ç
  window.I18N = I18N;
  window.I18N_MAP_CATS = MAP_CATS;

  // –ê–≤—Ç–æ-–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è (–º–æ–∂–Ω–æ –Ω–µ –≤—ã–∑—ã–≤–∞—Ç—å –≤—Ä—É—á–Ω—É—é)
  document.addEventListener('DOMContentLoaded', function () {
    I18N.init();
    I18N.applyAll();
  });
})();
